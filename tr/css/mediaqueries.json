{
  "spec": {
    "title": "Media Queries Level 5",
    "url": "https://www.w3.org/TR/2020/WD-mediaqueries-5-20200318/"
  },
  "properties": {},
  "descriptors": {
    "light-level": {
      "name": "light-level",
      "for": "@media",
      "value": "dim | normal | washed",
      "type": "discrete"
    },
    "environment-blending": {
      "name": "environment-blending",
      "for": "@media",
      "value": "opaque | additive | subtractive",
      "type": "discrete"
    },
    "scripting": {
      "name": "scripting",
      "for": "@media",
      "value": "none | initial-only | enabled",
      "type": "discrete"
    },
    "inverted-colors": {
      "name": "inverted-colors",
      "for": "@media",
      "value": "none | inverted",
      "type": "discrete"
    },
    "prefers-reduced-motion": {
      "name": "prefers-reduced-motion",
      "for": "@media",
      "value": "no-preference | reduce",
      "type": "discrete"
    },
    "prefers-reduced-transparency": {
      "name": "prefers-reduced-transparency",
      "for": "@media",
      "value": "no-preference | reduce",
      "type": "discrete"
    },
    "prefers-contrast": {
      "name": "prefers-contrast",
      "for": "@media",
      "value": "no-preference | high | low",
      "type": "discrete"
    },
    "prefers-color-scheme": {
      "name": "prefers-color-scheme",
      "for": "@media",
      "value": "no-preference | light | dark",
      "type": "discrete"
    },
    "forced-colors": {
      "name": "forced-colors",
      "for": "@media",
      "value": "none | active",
      "type": "discrete"
    },
    "prefers-reduced-data": {
      "name": "prefers-reduced-data",
      "for": "@media",
      "value": "no-preference | reduce",
      "type": "discrete"
    }
  },
  "valuespaces": {}
}
   "name": "monochrome",
      "for": "@media",
      "value": "<integer>",
      "type": "range"
    },
    "color-gamut": {
      "name": "color-gamut",
      "for": "@media",
      "value": "srgb | p3 | rec2020",
      "type": "discrete"
    },
    "pointer": {
      "name": "pointer",
      "for": "@media",
      "value": "none | coarse | fine",
      "type": "discrete"
    },
    "hover": {
      "name": "hover",
      "for": "@media",
      "value": "none | hover",
      "type": "discrete"
    },
    "any-pointer": {
      "name": "any-pointer",
      "for": "@media",
      "value": "none | coarse | fine",
      "type": "discrete"
    },
    "any-hover": {
      "name": "any-hover",
      "for": "@media",
      "value": "none | hover",
      "type": "discrete"
    },
    "device-width": {
      "name": "device-width",
      "for": "@media",
      "value": "<length>",
      "type": "range"
    },
    "device-height": {
      "name": "device-height",
      "for": "@media",
      "value": "<length>",
      "type": "range"
    },
    "device-aspect-ratio": {
      "name": "device-aspect-ratio",
      "for": "@media",
      "value": "<ratio>",
      "type": "range"
    }
  },
  "valuespaces": {
    "<media-query>": {
      "value": "<media-condition> | [ not | only ]? <media-type> [ and <media-condition-without-or> ]?"
    },
    "<media-type>": {
      "value": "<ident>"
    },
    "<media-condition>": {
      "value": "<media-not> | <media-in-parens> [ <media-and>* | <media-or>* ]"
    },
    "<media-condition-without-or>": {
      "value": "<media-not> | <media-in-parens> <media-and>*"
    },
    "<media-not>": {
      "value": "not <media-in-parens>"
    },
    "<media-and>": {
      "value": "and <media-in-parens>"
    },
    "<media-or>": {
      "value": "or <media-in-parens>"
    },
    "<media-in-parens>": {
      "value": "( <media-condition> ) | <media-feature> | <general-enclosed>"
    },
    "<media-feature>": {
      "value": "( [ <mf-plain> | <mf-boolean> | <mf-range> ] )"
    },
    "<mf-plain>": {
      "value": "<mf-name> : <mf-value>"
    },
    "<mf-boolean>": {
      "value": "<mf-name>"
    },
    "<mf-range>": {
      "value": "<mf-name> [ '<' | '>' ]? '='? <mf-value> | <mf-value> [ '<' | '>' ]? '='? <mf-name> | <mf-value> '<' '='? <mf-name> '<' '='? <mf-value> | <mf-value> '>' '='? <mf-name> '>' '='? <mf-value>"
    },
    "<mf-name>": {
      "value": "<ident>"
    },
    "<mf-value>": {
      "value": "<number> | <dimension> | <ident> | <ratio>"
    },
    "<general-enclosed>": {
      "value": "[ <function-token> <any-value> ) ] | ( <ident> <any-value> )"
    }
  }
}
